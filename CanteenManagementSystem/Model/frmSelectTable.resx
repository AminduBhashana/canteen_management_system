<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAqMCGDf8Fg1u+zMhcQegAAAAASUVORK5CYII=
</value>
  </data>
</root>